from sense_hat import SenseHat
import time

sense = SenseHat()

b = (0,0,0)
w = (255,255,255)
r = (255,0,0)
g = (0,255,0)
board = [[r,r,r,b,b,b,b,r], 
         [r,b,b,b,b,b,b,r],
         [b,b,b,b,g,b,b,r],
         [b,r,r,b,b,b,b,r],
         [b,b,b,b,b,b,b,b],
         [b,r,b,r,r,b,b,b],
         [b,b,b,r,b,b,b,r], 
         [r,r,b,b,b,r,r,r] ]




y=2				# y coordinate of marble
x=2				# x coordinate of marble
board[y][x] = w		# a white marble

def check_wall(x,y,new_x,new_y): 
  if board[new_y][new_x] != r: 
    return new_x, new_y 
  elif board[new_y][x] != r: 
    return x, new_y 
  elif board[y][new_x] != r: 
    return new_x, y 
  else:
    return x,y


def move_marble(pitch,roll,x,y): 
  new_x = x    #assume no change to start with
  new_y = y    #assume no change to start with
  if 1 < pitch < 179 and x != 0: 
    new_x -= 1    # move left
  elif 359 > pitch > 179 and x != 7: 
    new_x += 1    # move right
  if 1 < roll < 179 and y != 7: 
    new_y += 1    # move up
  elif 359 > roll > 179 and y != 0: 
    new_y -= 1    # move down
  new_x,new_y = check_wall(x,y,new_x,new_y)
  return new_x, new_y

game_over = 0
while not (game_over == 1):
  pitch = sense.get_orientation()['pitch'] 
  roll = sense.get_orientation()['roll'] 
  board[y][x] = b
  x,y = move_marble(pitch,roll,x,y)
  if board[y][x] == g:
    game_over = 1
  else:
    board[y][x] = w
    sense.set_pixels(sum(board,[])) 
    time.sleep(0.1)
  
sense.show_message('yay!!')

# for optional challenge :
# initiate a time counter, if (10*n),
# can do random checker, g = b, random 1 [][] to become g
# or set 4 points which will alt between same 

